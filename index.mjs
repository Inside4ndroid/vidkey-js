const _0x1b44c4 = _0x78b2; (function (_0x37a364, _0x4e76a8) { const _0x5d99a8 = _0x78b2, _0x1f6e99 = _0x37a364(); while (!![]) { try { const _0x3458b0 = parseInt(_0x5d99a8(0x18d)) / 0x1 * (parseInt(_0x5d99a8(0x1bb)) / 0x2) + -parseInt(_0x5d99a8(0x190)) / 0x3 * (parseInt(_0x5d99a8(0x1a1)) / 0x4) + -parseInt(_0x5d99a8(0x1b5)) / 0x5 + parseInt(_0x5d99a8(0x1a5)) / 0x6 + -parseInt(_0x5d99a8(0x1b7)) / 0x7 + -parseInt(_0x5d99a8(0x1a9)) / 0x8 * (parseInt(_0x5d99a8(0x1ad)) / 0x9) + parseInt(_0x5d99a8(0x19c)) / 0xa * (parseInt(_0x5d99a8(0x17d)) / 0xb); if (_0x3458b0 === _0x4e76a8) break; else _0x1f6e99['push'](_0x1f6e99['shift']()); } catch (_0x7684bb) { _0x1f6e99['push'](_0x1f6e99['shift']()); } } }(_0x3649, 0xa2422)); import _0xef9f6e from 'puppeteer-extra'; import _0x20dfb4 from 'puppeteer-extra-plugin-stealth'; import _0x11bdef from 'fs/promises'; _0xef9f6e[_0x1b44c4(0x1a3)](_0x20dfb4()); import _0x1f3a1f from '@babel/parser'; import _0x388629 from '@babel/traverse'; const VIDSRC = { 'USER_AGENT': _0x1b44c4(0x18c), 'EXPECTED_KEYS': 0x5, 'INJECT_URLS': ['all.js', _0x1b44c4(0x19b)], 'INIT_URL': _0x1b44c4(0x1ab), 'BTN_ID': _0x1b44c4(0x18e), 'MAX_TIMEOUT': 0x1388 }; function _0x78b2(_0x3f942b, _0x47cf5e) { const _0x36497f = _0x3649(); return _0x78b2 = function (_0x78b280, _0x4a9fa2) { _0x78b280 = _0x78b280 - 0x17b; let _0x16c65e = _0x36497f[_0x78b280]; return _0x16c65e; }, _0x78b2(_0x3f942b, _0x47cf5e); } function get_rc4_names(_0x603de6) { const _0x28df8f = _0x1b44c4, _0x16793a = _0x1f3a1f[_0x28df8f(0x199)](_0x603de6); let _0x13b2cb = []; const _0x5e8d54 = { 'FunctionDeclaration'(_0x337b91) { const _0x3023c7 = _0x28df8f; let _0xf1ab6 = 0x0; if (_0x337b91?.['node']?.[_0x3023c7(0x182)]?.['body']) for (let _0xda6fb4 of _0x337b91['node'][_0x3023c7(0x182)][_0x3023c7(0x182)]) { if (_0xda6fb4[_0x3023c7(0x194)] == 'ForStatement') { _0xf1ab6++; if (_0xf1ab6 >= 0x3) { if (_0x337b91[_0x3023c7(0x196)]['id'][_0x3023c7(0x1ba)]) _0x13b2cb[_0x3023c7(0x1ac)](_0x337b91[_0x3023c7(0x196)]['id']['name']); break; } } } } }; return _0x388629[_0x28df8f(0x1b2)](_0x16793a, _0x5e8d54), _0x13b2cb; } function _0x3649() { const _0x15017c = ['#btn-play', 'ERROR', '885CiByVf', 'waitForSelector', 'function\x20', 'click', 'type', 'launch', 'node', 'Success!', 'info', 'parse', 'log', 'embed.js', '10FnJhcp', 'stringify', 'continue', 'utf8', 'url', '8248UfoKVa', 'newPage', 'use', 'replace', '4479684FuEciy', '(){', 'setRequestInterception', 'length', '10984oYvlOe', 'USER_AGENT', 'https://vidsrc.to/embed/movie/385687', 'push', '270TDKLul', 'replaceAll', 'INJECT_URLS', 'bringToFront', 'Failure:\x20The\x20number\x20of\x20keys\x20does\x20not\x20meet\x20the\x20required\x20criteria.', 'default', '--no-sandbox', 'close', '5083500JvyWCG', 'keys.json', '5155780zwfbMQ', 'some', 'INIT_URL', 'name', '328sUnGqU', 'writeFile', '()\x20{if(arguments){arguments[\x27host\x27]=\x27', '--disable-web-security', 'host', '10911868RnRgIx', 'text', '[x]\x20', 'goto', 'console', 'body', 'encrypt', 'decrypt', 'EXPECTED_KEYS', 'startsWith', 'includes', 'Encrypt\x20keys:\x20', 'error', 'request', 'BTN_ID', 'Mozilla/5.0\x20(Windows\x20NT\x2010.0;\x20Win64;\x20x64)\x20AppleWebKit/537.36\x20(KHTML,\x20like\x20Gecko)\x20Chrome/111.0.0.0\x20Safari/537.36;\x20PlayStation', '8102KtXLqM']; _0x3649 = function () { return _0x15017c; }; return _0x3649(); } const sleep = _0x26085b => new Promise(_0x49a72c => setTimeout(_0x49a72c, _0x26085b)); async function find_keys(_0x3f4fbe) { const _0x4a239b = _0x1b44c4, _0x330992 = [_0x4a239b(0x1b3), _0x4a239b(0x17b)], _0x1da551 = { 'args': _0x330992, 'headless': !![] }, _0x1c58c3 = await _0xef9f6e[_0x4a239b(0x195)](_0x1da551), _0x4d4130 = await _0x1c58c3[_0x4a239b(0x1a2)](); let _0x49c055 = {}, _0x27a48f = 0x0; await _0x4d4130['setUserAgent'](_0x3f4fbe[_0x4a239b(0x1aa)]), await _0x4d4130['setViewport']({ 'width': 0x438, 'height': 0x438 }), await _0x4d4130[_0x4a239b(0x1a7)](!![]), _0x4d4130['on'](_0x4a239b(0x18a), async _0x1b265f => { const _0x172818 = _0x4a239b, _0x2198aa = _0x1b265f[_0x172818(0x1a0)](); if (_0x3f4fbe[_0x172818(0x1af)][_0x172818(0x1b8)](_0x583bf6 => _0x2198aa[_0x172818(0x187)](_0x583bf6))) { let _0xc3b89b = new URL(_0x2198aa)[_0x172818(0x17c)], _0x54c51b = await (await fetch(_0x2198aa))[_0x172818(0x17e)](); const _0x12253c = get_rc4_names(_0x54c51b); for (let _0xbf6a0b of _0x12253c) { let _0x5f470e = _0x172818(0x192) + _0xbf6a0b + _0x172818(0x1bd) + _0xc3b89b + '\x27;console.log(`S:${JSON.stringify(arguments)}`);}'; _0x54c51b = _0x54c51b[_0x172818(0x1ae)](_0x172818(0x192) + _0xbf6a0b + '()\x20{', _0x5f470e), _0x54c51b = _0x54c51b[_0x172818(0x1ae)](_0x172818(0x192) + _0xbf6a0b + _0x172818(0x1a6), _0x5f470e); } _0x1b265f['respond']({ 'status': 0xc8, 'body': _0x54c51b }); } else _0x1b265f[_0x172818(0x19e)](); }); let _0x5a43ad = ![]; return new Promise(async _0x573a82 => { const _0x403efa = _0x4a239b; _0x4d4130['on'](_0x403efa(0x181), async _0x321b67 => { const _0x4a35c4 = _0x403efa; let _0x35fd6e = _0x321b67[_0x4a35c4(0x17e)](); if (_0x35fd6e[_0x4a35c4(0x186)]('S:')) { let _0x3842dc = JSON[_0x4a35c4(0x199)](_0x35fd6e[_0x4a35c4(0x1a4)]('S:', '')); if (!_0x3842dc['0']) return; if (!_0x49c055[_0x3842dc[_0x4a35c4(0x17c)]]) _0x49c055[_0x3842dc[_0x4a35c4(0x17c)]] = []; !_0x49c055[_0x3842dc[_0x4a35c4(0x17c)]][_0x4a35c4(0x187)](_0x3842dc['0']) && (_0x49c055[_0x3842dc['host']][_0x4a35c4(0x1ac)](_0x3842dc['0']), _0x27a48f++); if (_0x27a48f >= _0x3f4fbe[_0x4a35c4(0x185)]) { _0x5a43ad = !![]; if (_0x1c58c3) await _0x1c58c3['close'](); _0x573a82(_0x49c055); } } })['on'](_0x403efa(0x189), async _0x570627 => { const _0x4bd5a5 = _0x403efa; console['log'](_0x4bd5a5(0x17f) + _0x570627); }), await _0x4d4130[_0x403efa(0x180)](_0x3f4fbe[_0x403efa(0x1b9)]), await _0x4d4130[_0x403efa(0x191)](_0x3f4fbe['BTN_ID'], { 'timeout': 0x1388 }); try { for (let _0x54dafc = 0x0; _0x54dafc < 0x32; _0x54dafc++) { if (_0x5a43ad) break; await _0x4d4130[_0x403efa(0x1b0)](); let _0x39d7b0 = await _0x4d4130['$'](_0x3f4fbe[_0x403efa(0x18b)]); _0x39d7b0 && !_0x5a43ad && _0x39d7b0[_0x403efa(0x193)](), await sleep(0xc8); } } catch (_0x2fedc4) { if (!_0x5a43ad) console['log'](_0x403efa(0x17f) + _0x2fedc4); } _0x1c58c3 && !_0x5a43ad && (await sleep(_0x3f4fbe['MAX_TIMEOUT']), await _0x1c58c3[_0x403efa(0x1b4)]()), _0x573a82(_0x49c055); }); } async function main() { const _0x4b09b3 = _0x1b44c4, _0xa65a55 = await find_keys(VIDSRC), _0x3dbf1d = { 'encrypt': [], 'decrypt': [] }; for (const _0x49f1e2 in _0xa65a55) { for (let _0x5c790c = 0x0; _0x5c790c < _0xa65a55[_0x49f1e2]['length']; _0x5c790c++) { _0x5c790c % 0x2 === 0x0 ? _0x3dbf1d[_0x4b09b3(0x183)][_0x4b09b3(0x1ac)](_0xa65a55[_0x49f1e2][_0x5c790c]) : _0x3dbf1d[_0x4b09b3(0x184)]['push'](_0xa65a55[_0x49f1e2][_0x5c790c]); } } if (_0x3dbf1d['encrypt'][_0x4b09b3(0x1a8)] === 0x3 && _0x3dbf1d[_0x4b09b3(0x184)]['length'] === 0x2) console[_0x4b09b3(0x198)](_0x4b09b3(0x197)), console[_0x4b09b3(0x19a)](JSON[_0x4b09b3(0x19d)](_0x3dbf1d)), await _0x11bdef[_0x4b09b3(0x1bc)]('keys.json', JSON[_0x4b09b3(0x19d)](_0x3dbf1d), _0x4b09b3(0x19f)); else { const _0x2a08f0 = { 'encrypt': [], 'decrypt': [] }; console[_0x4b09b3(0x189)](_0x4b09b3(0x1b1)), console[_0x4b09b3(0x19a)](_0x4b09b3(0x188) + _0x2a08f0['encrypt']['length'] + ',\x20Decrypt\x20keys:\x20' + _0x2a08f0[_0x4b09b3(0x184)][_0x4b09b3(0x1a8)]), _0x2a08f0[_0x4b09b3(0x183)][_0x4b09b3(0x1ac)](_0x4b09b3(0x18f)), _0x2a08f0['decrypt'][_0x4b09b3(0x1ac)]('ERROR'), await _0x11bdef[_0x4b09b3(0x1bc)](_0x4b09b3(0x1b6), JSON[_0x4b09b3(0x19d)](_0x2a08f0), _0x4b09b3(0x19f)); } } main();